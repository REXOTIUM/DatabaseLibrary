package info.peperkoek.databaselibrary.core;

import info.peperkoek.databaselibrary.utils.KeyValue;
import java.util.Collection;
import java.util.List;
import java.util.logging.Logger;

/**
 *
 * @author Rick Pijnenburg - REXOTIUM
 */
class MySQLDataAccessObject extends DataAccessObject {
    
    /**
     * 
     * @param connectionString The string to establish the connection to the database
     */
    MySQLDataAccessObject(String connectionString) {
        super(connectionString, Logger.getLogger(MySQLDataAccessObject.class.getName()));
    }

    @Override
    public <T> boolean insertObject(T obj) {
        boolean pkAutoGen = DBUtils.isPKAutoGenerated(obj);
        String table = DBUtils.getTableName(obj.getClass());
        List<KeyValue> kvs = DBUtils.getFields(obj, pkAutoGen);
        StringBuilder columns = new StringBuilder();
        StringBuilder values = new StringBuilder();
        for (KeyValue kv : kvs) {
            if (kv.getKey() == null || EMPTY.equals(kv.getValue())) {
                continue;
            }
            columns.append(kv.getKey());
            columns.append(COMMA);
            values.append(kv.getValue());
            values.append(COMMA);
        }
        columns.delete(columns.length() - 2, columns.length()); //remove excess comma
        values.delete(values.length() - 2, values.length()); //remove excess comma
        if(pkAutoGen) {
            String sql = String.format(INSERT_ITEM, table, columns.toString(), values.toString());
            if(!DBUtils.hasLinkTable(obj.getClass()))
                return insertQuery(obj, sql, false);
            return insertQuery(obj, sql, false) && insertLinkTable(obj);
        } else {
            String sql = String.format(INSERT_ITEM, table, columns.toString(), values.toString());
            if(!DBUtils.hasLinkTable(obj.getClass()))
                return nonQuery(sql);
            return nonQuery(sql) && insertLinkTable(obj);
        }
    }

    @Override
    public <T> boolean insertObjects(T[] obj) {
        for(T item : obj) {
            if(!insertObject(item))
                return false;
        }
        return true;
    }

    @Override
    public <T> boolean insertObjects(Collection<T> obj) {
        for(T item : obj) {
            if(!insertObject(item))
                return false;
        }
        return true;
    }
}